{"ast":null,"code":"var _jsxFileName = \"/Users/R.1/Desktop/Tetris React Hooks/src/components/Tetris.js\";\nimport React, { useState } from 'react';\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      // Left Arrow keyboard\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n\n  const startGame = () => {\n    // Reset Everything\n    setGameOver(false);\n    setDropTime(1000);\n    setStage(createStage());\n    resetPlayer();\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1); // Increase Speed\n\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      if (player.pos.y < 1) {\n        console.log('gameover');\n        setGameOver(true);\n        setDropTime(null);\n      }\n\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n\n  const keyUp = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  return React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: e => keyUp(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(StyledTetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, gameOver ? React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: `Score: ${score}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: `Rows: ${rows}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: `Level: ${level}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    callback: startGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/R.1/Desktop/Tetris React Hooks/src/components/Tetris.js"],"names":["React","useState","Stage","Display","StartButton","createStage","checkCollision","StyledTetrisWrapper","StyledTetris","useInterval","usePlayer","useStage","useGameStatus","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setLevel","move","keyCode","movePlayer","dropPlayer","dir","x","y","startGame","drop","prev","collided","pos","console","log","keyUp","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\nconst Tetris = () => {\n\tconst [dropTime, setDropTime] = useState(null);\n\tconst [gameOver, setGameOver] = useState(false);\n\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\tconst [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n\t\trowsCleared\n\t);\n\n\tconst move = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\t// Left Arrow keyboard\n\t\t\tif (keyCode === 37) {\n\t\t\t\tmovePlayer(-1);\n\t\t\t} else if (keyCode === 39) {\n\t\t\t\tmovePlayer(1);\n\t\t\t} else if (keyCode === 40) {\n\t\t\t\tdropPlayer();\n\t\t\t} else if (keyCode === 38) {\n\t\t\t\tplayerRotate(stage, 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst movePlayer = dir => {\n\t\tif (!checkCollision(player, stage, { x: dir, y: 0 })) {\n\t\t\tupdatePlayerPos({ x: dir, y: 0 });\n\t\t}\n\t};\n\n\tconst startGame = () => {\n\t\t// Reset Everything\n\t\tsetGameOver(false);\n\t\tsetDropTime(1000);\n\t\tsetStage(createStage());\n\t\tresetPlayer();\n\t\tsetScore(0);\n\t\tsetRows(0);\n\t\tsetLevel(0);\n\t};\n\n\tconst drop = () => {\n\t\t// Increase level when player has cleared 10 rows\n\t\tif (rows > (level + 1) * 10) {\n\t\t\tsetLevel(prev => prev + 1);\n\t\t\t// Increase Speed\n\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\t\t}\n\n\t\tif (!checkCollision(player, stage, { x: 0, y: 1 })) {\n\t\t\tupdatePlayerPos({ x: 0, y: 1, collided: false });\n\t\t} else {\n\t\t\tif (player.pos.y < 1) {\n\t\t\t\tconsole.log('gameover');\n\t\t\t\tsetGameOver(true);\n\t\t\t\tsetDropTime(null);\n\t\t\t}\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\n\t\t}\n\t};\n\n\tconst keyUp = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 40) {\n\t\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst dropPlayer = () => {\n\t\tsetDropTime(null);\n\t\tdrop();\n\t};\n\n\tuseInterval(() => {\n\t\tdrop();\n\t}, dropTime);\n\n\treturn (\n\t\t<StyledTetrisWrapper\n\t\t\trole=\"button\"\n\t\t\ttabIndex=\"0\"\n\t\t\tonKeyDown={e => move(e)}\n\t\t\tonKeyUp={e => keyUp(e)}\n\t\t>\n\t\t\t<StyledTetris>\n\t\t\t\t<Stage stage={stage} />\n\t\t\t\t<aside>\n\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t<Display gameOver={gameOver} text=\"Game Over\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Display text={`Score: ${score}`} />\n\t\t\t\t\t\t\t<Display text={`Rows: ${rows}`} />\n\t\t\t\t\t\t\t<Display text={`Level: ${level}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<StartButton callback={startGame} />\n\t\t\t\t</aside>\n\t\t\t</StyledTetris>\n\t\t</StyledTetrisWrapper>\n\t);\n};\n\nexport default Tetris;\n"]},"metadata":{},"sourceType":"module"}